#include <iostream>
#include <boost/bind.hpp>
#include "threadpool/threadpool.h"
#include "tap/quoteAdapter_TAP.h"
#include "tap\tradeAdapter_TAP.h"

using namespace std;

void testTapQuote()
{
	quoteAdapter_TAP * quote = new quoteAdapter_TAP("tap_Quote", 
		
		"\\log", "61.163.243.173", 6161, "", "");
	quote->init();
	while (!quote->isAdapterReady())
	{
		Sleep(1000);
		continue;
	}
	quote->Subscribe("pp1905", "DCE");
	int a;
	cin >> a;

}

void testTapTrade()
{
	athenathreadpoolPtr pThreadPool = athenathreadpoolPtr(new threadpool(4));
	tradeAdapter_TAP * trade = new tradeAdapter_TAP("trade_tap",
		
		"\\log", "61.163.243.173", 6060, "Q1062217870", "123456", pThreadPool);

	trade->init();
	while (!trade->isAdapterReady())
	{
		Sleep(1000);
		continue;
	}
	trade->OrderInsert("IF1904", "CFFEX", TAPI_ORDER_TYPE_MARKET, TAPI_SIDE_BUY,
		TAPI_PositionEffect_OPEN, TAPI_HEDGEFLAG_T, 0, 1);
	int a;
	cin >> a;

}
int main()
{
	testTapTrade();
	return 0;
}
